<main class="w-full p-2"><!-- Main de la parte gratuita de la web -->
    <!-- Div principar que contiene todo el contenido de la web -->
    <div class="w-full">
        <div class="bg-[white] w-full mx-auto flex flex-col items-center justify-center mt-5"><!-- Div con el background -->
            <div class="flex flex-col items-center justify-center">
                <h1 class="text-4xl text-black font-bold mb-2">CREA LOS MEJORES ROADMAPS QUE HAY</h1>
                <p class="text-[14px] mb-2">Describe lo que quieres aprender, explicalo, y envialo para que la IA te genere un roadmap perfecto para ti</p>
            </div>
            <!-- Input de texto que contiene el mensaje que se le va a enviar a la IA -->
            <div class="flex flex-row w-full justify-center align-center mt-4 mb-2"><!-- Div que contiene el input y el botón de enviar -->
                <input type="text" class="w-2/4 h-10 p-2 black border-solid border-2 rounded-lg mt-4" placeholder="Explica a la IA lo que quieres aprender..." / id="input-text"><!-- Input principal con el que se le da la información a la IA de lo que se quiere aprender -->
                <div class="flex flex-col justify-center align-center ml-4"><!-- Div del botón de enviar -->
                    <button type="submit" class="border-none bg-blue-800 text-white text-[16px] font-bold w-18 h-8 p-1 rounded-xl mt-3" id="submitButton">Enviar</button>
                </div>
            </div>
            <div class="flex flex-col justify-center align-center"><!-- Div que contiene el input y el botón de enviar -->
                <p class="text-[12px] p-2">Da más contexto a la IA, seleccionando los siguientes botones:</p> <!-- Texto informativo -->
                <div class="inline-block relative" id="dropdown-container"><!-- Div que contiene el botón de desplegable y el contenedor de las opciones seleccionadas -->
                    <div class="w-full align-middle justify-center flex flex-row mx-auto mb-2 mt-2"><!-- Div que contiene el botón de desplegable -->
                        <button class="w-48 flex flex-row text-black bg-[#F5F7FA] border-solid border-2 border-black rounded-lg px-1 py-1 hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-opacity-50" id="menu-button" aria-expanded="false" aria-haspopup="true">
                            Seleccionar opciones
                            <svg class="ml-3 mx-auto h-5 w-4 text-gray-400" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                <path fill-rule="evenodd" d="M5.23 7.21a.75.75 0 011.06.02L10 11.168l3.71-3.938a.75.75 0 111.08 1.04l-4.25 4.5a.75.75 0 01-1.08 0L5.23 8.23a.75.75 0 01.02-1.02z" clip-rule="evenodd" />
                            </svg>
                        </button>
                    </div>
                    <!-- Contenedor del menú desplegable -->
                    <!-- Este contenedor se mostrará al hacer clic en el botón de menú desplegable -->
                    <div class="absolute items-center right-0 z-10 mt-2 w-200 bg-white border border-gray-300 rounded-md shadow-lg hidden" role="menu" aria-orientation="vertical" aria-labelledby="menu-items" id="menu-items">
                        <!-- Contenedor de las opciones seleccionadas -->
                        <div class="py-2 grid grid-cols-2 md:grid-cols-4 gap-1" role="none" id="checkbox-container">
                            <label class="block px-2 py-1 text-sm text-gray-600 hover:bg-gray-400 transition duration-300 ease-in-out" role="menuitem">
                                <input type="checkbox" class="mr-1 option-checkbox" name="frontend" value="front-end" id="frontend" /> FrontEnd
                            </label>
                            <label class="block px-2 py-1 text-sm text-gray-600 hover:bg-gray-400 transition duration-300 ease-in-out" role="menuitem">
                                <input type="checkbox" class="mr-1 option-checkbox" name="frontend" value="backend-end" id="backend" /> BackEnd
                            </label>
                            <label class="block px-2 py-1 text-sm text-gray-600 hover:bg-gray-400 transition duration-300 ease-in-out" role="menuitem">
                                <input type="checkbox" class="mr-1 option-checkbox" name="frontend" value="fullstack" id="fullstack" /> FullStack
                            </label>
                            <label class="block px-2 py-1 text-sm text-gray-600 hover:bg-gray-400 transition duration-300 ease-in-out" role="menuitem">
                                <input type="checkbox" class="mr-1 option-checkbox" name="frontend" value="mobile" id="mobile" /> Mobile
                            </label>
                            <label class="block px-2 py-1 text-sm text-gray-600 hover:bg-gray-400 transition duration-300 ease-in-out" role="menuitem">
                                <input type="checkbox" class="mr-1 option-checkbox" name="frontend" value="videogames" id="videogames" /> Videojuegos
                            </label>
                            <label class="block px-2 py-1 text-sm text-gray-600 hover:bg-gray-400 transition duration-300 ease-in-out" role="menuitem">
                                <input type="checkbox" class="mr-1 option-checkbox" name="frontend" value="dataScience" id="dataScience" /> Data Science
                            </label>
                            <label class="block px-2 py-1 text-sm text-gray-600 hover:bg-gray-400 transition duration-300 ease-in-out" role="menuitem">
                                <input type="checkbox" class="mr-1 option-checkbox" name="frontend" value="devOps" id="devOps" /> DevOps
                            </label>
                            <label class="block px-2 py-1 text-sm text-gray-600 hover:bg-gray-400 transition duration-300 ease-in-out" role="menuitem">
                                <input type="checkbox" class="mr-1 option-checkbox" name="frontend" value="cibersecurity" id="cibersevurity" /> Ciberseguridad
                            </label>
                            <label class="block px-2 py-1 text-sm text-gray-600 hover:bg-gray-400 transition duration-300 ease-in-out" role="menuitem">
                                <input type="checkbox" class="mr-1 option-checkbox" name="frontend" value="cloudEngineer" id="cloudEngineer" /> Cloud
                            </label>
                            <label class="block px-2 py-1 text-sm text-gray-600 hover:bg-gray-400 transition duration-300 ease-in-out" role="menuitem">
                                <input type="checkbox" class="mr-1 option-checkbox" name="frontend" value="machineLearning" id="machineLearning" /> Machine Learning
                            </label>
                            <label class="block px-2 py-1 text-sm text-gray-600 hover:bg-gray-400 transition duration-300 ease-in-out" role="menuitem">
                                <input type="checkbox" class="mr-1 option-checkbox" name="frontend" value="desktopDeveloper" id="desktopDeveloper" /> Apps de Escritorio
                            </label>
                            <label class="block px-2 py-1 text-sm text-gray-600 hover:bg-gray-400 transition duration-300 ease-in-out" role="menuitem">
                                <input type="checkbox" class="mr-1 option-checkbox" name="frontend" value="linuxExpert" id="linuxExpert" /> Linux
                            </label>
                        </div>
                    </div>
                </div>
                <!-- Contenedor que mostrará las opciones seleccionadas -->
                <div id="selected-options" class="flex flex-wrap gap-2 mt-4 max-w-lg"></div>
            </div>
            <!-- Mensaje de los inputs de prueba que quedan -->
            <div class="flex flex-col items-center justify-center mb-2 border-2 border-neutral-500 rounded-md p-2 w-2/5 mt-4">
                <p class="text-black font-bold">Prueba Gratis</p>
                <span class="text-[12px] text-neutral-600">
                    Te quedan <span id="remainingInputs" class="font-bold">3</span> inputs de prueba.
                    Si quieres tener más inputs, <a class="text-blue-500 underline font-black" href="/payment">actualiza a la versión PRO</a>
                </span>
            </div>
        </div>
    </div>
<script>
    // SCRIPT PARA MANEJAR LOS INPUTS RESTANTES Y EL CONTADOR
    document.addEventListener('DOMContentLoaded', () => {
        const remainingInputs = document.getElementById('remainingInputs');
        const submitButton = document.getElementById('submitButton');

        let inputsLeft = 3; // Número de inputs de prueba restantes

        // Recuperar el estado de los inputs restantes desde localStorage al cargar la página
        const savedInputsLeft = localStorage.getItem('inputsLeft');
        if (savedInputsLeft) {
            inputsLeft = parseInt(savedInputsLeft, 10);
            remainingInputs.textContent = inputsLeft;
        } else {
            remainingInputs.textContent = inputsLeft; // Mostrar el valor inicial
        }

        // Deshabilitar el botón si no hay inputs restantes
        if (inputsLeft <= 0) {
            submitButton.disabled = true;
        }

        // Actualizar el contador de inputs restantes
        submitButton.addEventListener('click', () => {
            if (inputsLeft > 0) {
                inputsLeft--;
                remainingInputs.textContent = inputsLeft;
                localStorage.setItem('inputsLeft', inputsLeft); // Guardar el estado en localStorage
            } else {
                alert('No tienes más inputs de prueba disponibles.');
                submitButton.disabled = true; // Deshabilitar el botón si no hay inputs restantes
            }
        });

        // Manejo de la tecla Enter
        submitButton.addEventListener('keydown', (event) => {
            if (event.key === 'Enter') {
                if (inputsLeft > 0) {
                    inputsLeft--;
                    remainingInputs.textContent = inputsLeft;
                    localStorage.setItem('inputsLeft', inputsLeft);
                } else {
                    alert('No tienes más inputs de prueba disponibles.');
                    submitButton.disabled = true;
                }
            }
        });
    });

    // SCRIPT PARA MANEJAR EL DESPLEGABLE Y LAS OPCIONES
    document.addEventListener('DOMContentLoaded', () => {
        const dropdownButton = document.getElementById('menu-button');
        const dropdownItems = document.getElementById('menu-items');
        const checkboxContainer = document.getElementById('checkbox-container');
        const selectedOptionsContainer = document.getElementById('selected-options');
        
        // Obtener todas las checkboxes usando la clase option-checkbox que agregamos
        const checkboxes = document.querySelectorAll('.option-checkbox');

        const updateSelectedOptions = () => {
            if (selectedOptionsContainer) {
                selectedOptionsContainer.innerHTML = ''; // Limpiar el contenedor de tarjetas

                checkboxes.forEach((checkbox) => {
                    if (checkbox.checked) {
                        // Obtener el texto de la etiqueta que contiene el checkbox
                        const optionText = checkbox.parentElement.textContent.trim();
                        const optionValue = checkbox.value;

                        // Crear la tarjeta con el nombre de la opción seleccionada
                        const card = document.createElement('span');
                        card.classList.add(
                            'inline-flex',
                            'items-center',
                            'rounded-full',
                            'bg-green-100',
                            'px-3',
                            'py-0.5',
                            'text-sm',
                            'font-medium',
                            'text-green-800',
                        );
                        card.textContent = optionText;

                        // Agregar botón para eliminar la opción
                        const removeButton = document.createElement('button');
                        removeButton.type = 'button';
                        removeButton.classList.add('ml-1', 'text-green-500', 'hover:text-green-700', 'focus:outline-none');
                        removeButton.innerHTML = `
                            <svg class="h-4 w-4 fill-current" viewBox="0 0 20 20">
                                <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"/>
                            </svg>
                        `;
                        
                        // Evento para eliminar la opción al hacer clic en el botón
                        removeButton.addEventListener('click', () => {
                            checkbox.checked = false;
                            updateSelectedOptions();
                        });

                        card.appendChild(removeButton);
                        selectedOptionsContainer.appendChild(card);
                    }
                });
            }
        };

        // Manejar el clic en el botón del menú desplegable
        if (dropdownButton && dropdownItems) {
            dropdownButton.addEventListener('click', () => {
                const expanded = dropdownButton.getAttribute('aria-expanded') === 'true' || false;
                dropdownButton.setAttribute('aria-expanded', (!expanded).toString());
                dropdownItems.classList.toggle('hidden');
                dropdownItems.classList.toggle('w-100');
            });
        }

        // Escuchar cambios en las casillas de verificación
        checkboxes.forEach(checkbox => {
            checkbox.addEventListener('change', updateSelectedOptions);
        });

        // Cerrar el desplegable si se hace clic fuera de él
        window.addEventListener('click', (event) => {
            const targetElement = event.target;
            if (
                dropdownButton &&
                dropdownItems &&
                !dropdownButton.contains(targetElement) &&
                !dropdownItems.contains(targetElement)
            ) {
                dropdownButton.setAttribute('aria-expanded', 'false');
                dropdownItems.classList.add('hidden');
            }
        });

        // Inicializar la visualización de las opciones seleccionadas al cargar la página
        updateSelectedOptions();
    });
</script>
</main>
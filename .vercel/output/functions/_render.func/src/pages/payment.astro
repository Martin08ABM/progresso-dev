---
import Layout from '../layouts/Layout.astro';
---

<Layout title="ProgressoDev - Versión Pro">
  <div class="flex flex-row w-3/4 mx-auto mt-10 text-center gap-6">
    <div class="bg-white border-2 border-neutral-700 shadow-md rounded-lg p-6 max-w-sm w-full md:w-1/3 mx-auto">
      <h1 class="text-2xl mb-4">Versión Gratuita</h1>
      <ul class="text-left mb-4">
        <li class="mb-2">- Generación de Roadmaps LIMITADOS</li>
        <li class="mb-2">- No se guardan</li>
        <li class="mb-2">- No hay soporte en caso de duda</li>
        <li class="mb-2">- Generación de Roadmaps en Español</li>
      </ul>
      <a href="/"><button class="px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700">
          Quedarse
        </button></a>
    </div>
    <div class="bg-white border-2 border-neutral-700 shadow-md rounded-lg p-6 max-w-sm w-full md:w-1/3 mx-auto">
      <h1 class="text-2xl mb-4">Versión Pro – 2,90 €</h1>
      <ul class="text-left mb-4">
        <li class="mb-2">- Generación de Roadmaps ILIMITADOS</li>
        <li class="mb-2">- Poder almacenarlos en la web</li>
        <li class="mb-2">- Pedir ayuda a la IA en caso de no entender algo</li>
        <li class="mb-2">- Generación de Roadmaps en Español</li>
        <li class="mb-2">- Generación de Roadmaps en Inglés</li>
      </ul>
      <button id="checkout-button" class="px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700">
        Pagar
      </button>
      <p id="error-message" class="text-red-500 mt-2 hidden"></p>
    </div>
  </div>
</Layout>

<script>
  document.getElementById('checkout-button').addEventListener('click', async () => {
    const errorElement = document.getElementById('error-message');
    errorElement.classList.add('hidden');
    const button = document.getElementById('checkout-button');
    button.disabled = true;
    button.innerText = 'Procesando...';

    try {
      const res = await fetch('/api/checkout', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        }
      });

      // Comprobar si la respuesta es JSON
      const contentType = res.headers.get('content-type');
      if (!contentType || !contentType.includes('application/json')) {
        const text = await res.text();
        console.error('La respuesta no es JSON:', text.substring(0, 500));
        throw new Error('La respuesta del servidor no es válida');
      }

      const data = await res.json();

      if (!res.ok) {
        throw new Error(data.error || `Error HTTP: ${res.status}`);
      }

      if (data.url) {
        window.location.href = data.url;
      } else {
        throw new Error('No se recibió URL de redirección');
      }
    } catch (error) {
      console.error('Error:', error);
      errorElement.textContent = `Error: ${error.message}`;
      errorElement.classList.remove('hidden');
    } finally {
      button.disabled = false;
      button.innerText = 'Pagar';
    }
  });
</script>